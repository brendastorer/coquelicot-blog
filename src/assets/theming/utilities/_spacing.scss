$space-sizes: (
  "--xsmall": var(--space-xsmall),
  "--small": var(--space-small),
  "--medium": var(--space-medium),
  "--large": var(--space-large),
  "--xlarge": var(--space-xlarge)
);

$space-places: (
  "mt": "margin-top",
  "mr": "margin-right",
  "mb": "margin-bottom",
  "ml": "margin-left",
  "pt": "padding-top",
  "pr": "padding-right",
  "pb": "padding-bottom",
  "pl": "padding-left",
);

// Specific sized individual spaces (e.g. .space--mt--small)
@each $size-name, $size-value in $space-sizes {
  @each $space-name, $space-property in $space-places {
    .space--#{$space-name}#{$size-name} {
      #{$space-property}: $size-value;
    }
  }
}

// Specific sized Vertical and Horizontal spaces (e.g. .space--mv--small)
@each $size-name, $size-value in $space-sizes {
  .space--mv#{$size-name} {
    margin-bottom: $size-value;
    margin-top: $size-value;
  }

  .space--mh#{$size-name} {
    margin-left: $size-value;
    margin-right: $size-value;
  }

  .space--pv#{$size-name} {
    padding-bottom: $size-value;
    padding-top: $size-value;
  }

  .space--ph#{$size-name} {
    padding-left: $size-value;
    padding-right: $size-value;
  }
}

.space--viewport-sides {
  padding-left: var(--space-viewport-sides);
  padding-right: var(--space-viewport-sides);
}

.space--grid-gap {
  gap: var(--space-grid-gap);
}

.space--gap--xlarge {
  gap: var(--space-xlarge);
}

.space--gap--large {
  gap: var(--space-large);
}

.space--gap--medium {
  gap: var(--space-medium);
}

.space--gap--small {
  gap: var(--space-small);
}

.space--gap--xsmall {
  gap: var(--space-xsmall);
}

.space--clear-header {
  margin-top: var(--logo-height);
  padding-top: var(--space-xlarge);
}

.space--gap--unset {
  gap: 0;
}

@each $breakpoint-name, $breakpoint-value in $unset-breakpoints {
  .space--m--unset#{$breakpoint-name} {
    @include breakpoint($breakpoint-value) {
      margin: 0;
    }
  }

  .space--p--unset#{$breakpoint-name} {
    @include breakpoint($breakpoint-value) {
      padding: 0;
    }
  }
}
